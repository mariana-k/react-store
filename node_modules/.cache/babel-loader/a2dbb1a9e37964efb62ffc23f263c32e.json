{"ast":null,"code":"import _classCallCheck from \"/mydisk/learning/courses/freecodecamp-react/react-store/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/mydisk/learning/courses/freecodecamp-react/react-store/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/mydisk/learning/courses/freecodecamp-react/react-store/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/mydisk/learning/courses/freecodecamp-react/react-store/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/mydisk/learning/courses/freecodecamp-react/react-store/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/mydisk/learning/courses/freecodecamp-react/react-store/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/mydisk/learning/courses/freecodecamp-react/react-store/src/components/ProductList.js\";\nimport React, { Component } from 'react';\nimport Product from './Product';\nimport Title from './Title';\nimport { ProductConsumer } from '../context';\nvar currentList = [];\n\nvar ProductList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProductList, _Component);\n\n  function ProductList(props) {\n    var _this;\n\n    _classCallCheck(this, ProductList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProductList).call(this, props));\n    _this.state = {\n      filtered: []\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ProductList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        filtered: currentList\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      this.setState({\n        filtered: nextProps.items\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      // Variable to hold the original version of the list\n      // Variable to hold the filtered list before putting into state\n      var newList = []; // If the search bar isn't empty\n\n      if (e.target.value !== \"\") {\n        // Assign the original list to currentList\n        // Use .filter() to determine which items should be displayed\n        // based on the search terms\n        newList = currentList.filter(function (item) {\n          // change current item to lowercase\n          var lc = item.toLowerCase(); // change search term to lowercase\n\n          var filter = e.target.value.toLowerCase(); // check to see if the current list item includes the search term\n          // If it does, it will be added to newList. Using lowercase eliminates\n          // issues with capitalization in search terms and search content\n\n          return lc.includes(filter);\n        });\n      } else {\n        // If the search bar is empty, set newList to original task list\n        newList = this.state.currentList;\n      } // Set the filtered state based on what our rules added to newList\n\n\n      this.setState({\n        filtered: newList\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"input\",\n        onChange: this.handleChange,\n        placeholder: \"Search...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"py-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Title, {\n        name: \"our\",\n        title: \"products\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(ProductConsumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, function (value) {\n        currentList = value.products;\n        return _this2.state.newList.map(function (product) {\n          return React.createElement(Product, {\n            key: product.product_id,\n            product: product,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          });\n        });\n      })))));\n    }\n  }]);\n\n  return ProductList;\n}(Component);\n\nexport { ProductList as default };","map":{"version":3,"sources":["/mydisk/learning/courses/freecodecamp-react/react-store/src/components/ProductList.js"],"names":["React","Component","Product","Title","ProductConsumer","currentList","ProductList","props","state","filtered","handleChange","bind","setState","nextProps","items","e","newList","target","value","filter","item","lc","toLowerCase","includes","products","map","product","product_id"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAAQC,eAAR,QAA8B,YAA9B;AACA,IAAIC,WAAW,GAAG,EAAlB;;IACqBC,W;;;;;AAEnB,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,qFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAIA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AANiB;AAOpB;;;;wCAEmB;AAClB,WAAKC,QAAL,CAAc;AACZH,QAAAA,QAAQ,EAAEJ;AADE,OAAd;AAGD;;;8CAEyBQ,S,EAAW;AACnC,WAAKD,QAAL,CAAc;AACZH,QAAAA,QAAQ,EAAEI,SAAS,CAACC;AADR,OAAd;AAGD;;;iCAEYC,C,EAAG;AACd;AAEA;AACF,UAAIC,OAAO,GAAG,EAAd,CAJgB,CAMd;;AACF,UAAID,CAAC,CAACE,MAAF,CAASC,KAAT,KAAmB,EAAvB,EAA2B;AACrB;AAGA;AACA;AACNF,QAAAA,OAAO,GAAGX,WAAW,CAACc,MAAZ,CAAmB,UAAAC,IAAI,EAAI;AAC3B;AACR,cAAMC,EAAE,GAAGD,IAAI,CAACE,WAAL,EAAX,CAFmC,CAG3B;;AACR,cAAMH,MAAM,GAAGJ,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeI,WAAf,EAAf,CAJmC,CAK3B;AACA;AACA;;AACR,iBAAOD,EAAE,CAACE,QAAH,CAAYJ,MAAZ,CAAP;AACD,SATS,CAAV;AAUC,OAhBD,MAgBO;AACD;AACNH,QAAAA,OAAO,GAAG,KAAKR,KAAL,CAAWH,WAArB;AACC,OA1Be,CA2Bd;;;AACF,WAAKO,QAAL,CAAc;AACdH,QAAAA,QAAQ,EAAEO;AADI,OAAd;AAGC;;;6BACU;AAAA;;AACP,aACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAC,OAA7B;AAAqC,QAAA,QAAQ,EAAE,KAAKN,YAApD;AAAkE,QAAA,WAAW,EAAC,WAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,KAAZ;AAAkB,QAAA,KAAK,EAAC,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEM,UAAAQ,KAAK,EAAI;AACPb,QAAAA,WAAW,GAAGa,KAAK,CAACM,QAApB;AACF,eAAO,MAAI,CAAChB,KAAL,CAAWQ,OAAX,CAAmBS,GAAnB,CACH,UAAAC,OAAO,EAAI;AACX,iBAAO,oBAAC,OAAD;AAAS,YAAA,GAAG,EAAEA,OAAO,CAACC,UAAtB;AAAkC,YAAA,OAAO,EAAED,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACC,SAHE,CAAP;AAKC,OATP,CADA,CAFF,CADF,CAFJ,CADJ;AAwBD;;;;EAhFsCzB,S;;SAApBK,W","sourcesContent":["import React, { Component } from 'react'\nimport Product from './Product'\nimport Title from './Title'\nimport {ProductConsumer} from '../context'\nlet currentList = [];\nexport default class ProductList extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        filtered: [],\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n}\n\ncomponentDidMount() {\n  this.setState({\n    filtered: currentList\n  });\n}\n\ncomponentWillReceiveProps(nextProps) {\n  this.setState({\n    filtered: nextProps.items\n  });\n}\n\nhandleChange(e) {\n  // Variable to hold the original version of the list\n\n  // Variable to hold the filtered list before putting into state\nlet newList = [];\n\n  // If the search bar isn't empty\nif (e.target.value !== \"\") {\n      // Assign the original list to currentList\n\n\n      // Use .filter() to determine which items should be displayed\n      // based on the search terms\nnewList = currentList.filter(item => {\n          // change current item to lowercase\n  const lc = item.toLowerCase();\n          // change search term to lowercase\n  const filter = e.target.value.toLowerCase();\n          // check to see if the current list item includes the search term\n          // If it does, it will be added to newList. Using lowercase eliminates\n          // issues with capitalization in search terms and search content\n  return lc.includes(filter);\n});\n} else {\n      // If the search bar is empty, set newList to original task list\nnewList = this.state.currentList;\n}\n  // Set the filtered state based on what our rules added to newList\nthis.setState({\nfiltered: newList\n});\n}\n  render() {\n    return (\n        <React.Fragment>\n            <input type=\"text\" className=\"input\" onChange={this.handleChange} placeholder=\"Search...\" />\n            <div className=\"py-5\">\n              <div className=\"container\">\n                <Title name=\"our\" title=\"products\"/>\n                <div className=\"row\">\n                <ProductConsumer>\n                  {\n                      value => {\n                        currentList = value.products ;\n                      return this.state.newList.map (\n                          product => {\n                          return <Product key={product.product_id} product={product}/>\n                          }\n                      )\n                      }\n                  }\n              </ProductConsumer>\n                </div>\n              </div>\n            </div>\n        </React.Fragment>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
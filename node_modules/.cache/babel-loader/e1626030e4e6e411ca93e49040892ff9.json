{"ast":null,"code":"import _classCallCheck from \"/mydisk/learning/courses/freecodecamp-react/react-store/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/mydisk/learning/courses/freecodecamp-react/react-store/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/mydisk/learning/courses/freecodecamp-react/react-store/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/mydisk/learning/courses/freecodecamp-react/react-store/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/mydisk/learning/courses/freecodecamp-react/react-store/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/mydisk/learning/courses/freecodecamp-react/react-store/src/components/Cart/Checkout.js\";\nimport React from \"react\";\nimport StripeCheckout from 'react-stripe-checkout';\n\nvar Checkout =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Checkout, _React$Component);\n\n  function Checkout() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Checkout);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Checkout)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onToken = function (token) {\n      fetch('https://backendapi.turing.com/stripe/charge', {\n        method: 'POST',\n        body: JSON.stringify(token)\n      }).then(function (response) {\n        response.json().then(function (data) {\n          alert(\"We are in business, \".concat(data.email));\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Checkout, [{\n    key: \"render\",\n    // ...\n    value: function render() {\n      var _this2 = this;\n\n      var onSuccess = function onSuccess(payment) {\n        _this2.props.clearCart();\n\n        _this2.props.history.push(\"/\");\n\n        console.log(\"The payment was succeeded!\", payment);\n      };\n\n      var onCancel = function onCancel(data) {\n        // User pressed \"cancel\" or close Paypal's popup!\n        console.log(\"The payment was cancelled!\", data); // You can bind the \"data\" object's value to your state or props or whatever here, please see below for sample returned data\n      };\n\n      var onError = function onError(err) {\n        // The main Paypal's script cannot be loaded or somethings block the loading of that script!\n        console.log(\"Error!\", err); // Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\n        // => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\n      };\n\n      var env = \"sandbox\"; // you can set here to 'production' for production\n\n      var currency = \"USD\"; // or you can set this value from your props or state\n\n      var total = 1; // same as above, this is the total amount (based on currency) to be paid by using Paypal express checkout\n      // Document on Paypal's currency code: https://developer.paypal.com/docs/classic/api/currency_codes/\n\n      var client = {\n        sandbox: process.env.REACT_APP_APP_ID,\n        production: \"YOUR-PRODUCTION-APP-ID\"\n      };\n      return React.createElement(StripeCheckout, {\n        token: this.onToken,\n        stripeKey: \"pk_test_NcwpaplBCuTL6I0THD44heRe\",\n        amount: this.props.amount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Checkout;\n}(React.Component);\n\nexport { Checkout as default };","map":{"version":3,"sources":["/mydisk/learning/courses/freecodecamp-react/react-store/src/components/Cart/Checkout.js"],"names":["React","StripeCheckout","Checkout","onToken","token","fetch","method","body","JSON","stringify","then","response","json","data","alert","email","onSuccess","payment","props","clearCart","history","push","console","log","onCancel","onError","err","env","currency","total","client","sandbox","process","REACT_APP_APP_ID","production","amount","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;;IAEqBC,Q;;;;;;;;;;;;;;;;;;UACjBC,O,GAAU,UAACC,KAAD,EAAW;AACnBC,MAAAA,KAAK,CAAC,6CAAD,EAAgD;AACnDC,QAAAA,MAAM,EAAE,MAD2C;AAEnDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,KAAf;AAF6C,OAAhD,CAAL,CAGGM,IAHH,CAGQ,UAAAC,QAAQ,EAAI;AAClBA,QAAAA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqB,UAAAG,IAAI,EAAI;AAC3BC,UAAAA,KAAK,+BAAwBD,IAAI,CAACE,KAA7B,EAAL;AACD,SAFD;AAGD,OAPD;AAQD,K;;;;;;;AAED;6BAES;AAAA;;AACL,UAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,OAAO,EAAI;AACzB,QAAA,MAAI,CAACC,KAAL,CAAWC,SAAX;;AACA,QAAA,MAAI,CAACD,KAAL,CAAWE,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CN,OAA1C;AACD,OAJH;;AAME,UAAMO,QAAQ,GAAG,SAAXA,QAAW,CAAAX,IAAI,EAAI;AACvB;AACAS,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CV,IAA1C,EAFuB,CAGvB;AACD,OAJD;;AAMA,UAAMY,OAAO,GAAG,SAAVA,OAAU,CAAAC,GAAG,EAAI;AACrB;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBG,GAAtB,EAFqB,CAGrB;AACA;AACD,OALD;;AAOA,UAAIC,GAAG,GAAG,SAAV,CApBG,CAoBkB;;AAC3B,UAAIC,QAAQ,GAAG,KAAf,CArBS,CAqBa;;AACtB,UAAIC,KAAK,GAAG,CAAZ,CAtBS,CAsBM;AACf;;AAEA,UAAMC,MAAM,GAAG;AACbC,QAAAA,OAAO,EAAEC,OAAO,CAACL,GAAR,CAAYM,gBADR;AAEbC,QAAAA,UAAU,EAAE;AAFC,OAAf;AAIE,aAEE,oBAAC,cAAD;AACE,QAAA,KAAK,EAAE,KAAK/B,OADd;AAEE,QAAA,SAAS,EAAC,kCAFZ;AAGE,QAAA,MAAM,EAAE,KAAKe,KAAL,CAAWiB,MAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF;AAQD;;;;EAnDiCnC,KAAK,CAACoC,S;;SAAvBlC,Q","sourcesContent":["import React from \"react\";\nimport StripeCheckout from 'react-stripe-checkout';\n\nexport default class Checkout extends React.Component {\n    onToken = (token) => {\n      fetch('https://backendapi.turing.com/stripe/charge', {\n        method: 'POST',\n        body: JSON.stringify(token),\n      }).then(response => {\n        response.json().then(data => {\n          alert(`We are in business, ${data.email}`);\n        });\n      });\n    }\n  \n    // ...\n  \n    render() {\n        const onSuccess = payment => {\n            this.props.clearCart();\n            this.props.history.push(\"/\");\n            console.log(\"The payment was succeeded!\", payment);\n          };\n      \n          const onCancel = data => {\n            // User pressed \"cancel\" or close Paypal's popup!\n            console.log(\"The payment was cancelled!\", data);\n            // You can bind the \"data\" object's value to your state or props or whatever here, please see below for sample returned data\n          };\n      \n          const onError = err => {\n            // The main Paypal's script cannot be loaded or somethings block the loading of that script!\n            console.log(\"Error!\", err);\n            // Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\n            // => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\n          };\n\n          let env = \"sandbox\"; // you can set here to 'production' for production\n    let currency = \"USD\"; // or you can set this value from your props or state\n    let total = 1; // same as above, this is the total amount (based on currency) to be paid by using Paypal express checkout\n    // Document on Paypal's currency code: https://developer.paypal.com/docs/classic/api/currency_codes/\n\n    const client = {\n      sandbox: process.env.REACT_APP_APP_ID,\n      production: \"YOUR-PRODUCTION-APP-ID\"\n    };\n      return (\n        \n        <StripeCheckout\n          token={this.onToken}\n          stripeKey=\"pk_test_NcwpaplBCuTL6I0THD44heRe\"\n          amount={this.props.amount}\n        />\n      )\n    }\n  }"]},"metadata":{},"sourceType":"module"}